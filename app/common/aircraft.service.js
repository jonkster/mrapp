"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var AircraftService = /** @class */ (function () {
    function AircraftService() {
    }
    AircraftService.prototype.getEngineLeft = function (ac, engine) {
        return Math.round(ac.engineHrsAtMaint[engine - 1] - this.getTtis(ac));
    };
    AircraftService.prototype.getPropLeft = function (ac, engine) {
        return Math.round(ac.propHrsAtMaint[engine - 1] - this.getTtis(ac));
    };
    AircraftService.prototype.getHrsLeft = function (ac) {
        var hrs = ac.hrsAtMaint - this.getTtis(ac);
        return Math.round(hrs * 10) / 10;
    };
    AircraftService.prototype.getDaysLeft = function (ac) {
        if (ac.annualDateTuple !== undefined) {
            var exDate = new Date(ac.annualDateTuple[0], ac.annualDateTuple[1] - 1, ac.annualDateTuple[2]);
            var time = exDate.valueOf() - Date.now().valueOf();
            return Math.round(time / (24 * 60 * 60 * 1000));
        }
        else {
            return 0;
        }
    };
    AircraftService.prototype.getMaintDaysLeft = function (dateTuple) {
        if (dateTuple !== undefined) {
            var exDate = new Date(dateTuple[0], dateTuple[1] - 1, dateTuple[2]);
            var time = exDate.valueOf() - Date.now().valueOf();
            return Math.round(time / (24 * 60 * 60 * 1000));
        }
        else {
            return 0;
        }
    };
    AircraftService.prototype.getTtis = function (ac) {
        return ac.clockTime + ac.clockOffset;
    };
    AircraftService = __decorate([
        core_1.Injectable(),
        __metadata("design:paramtypes", [])
    ], AircraftService);
    return AircraftService;
}());
exports.AircraftService = AircraftService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWlyY3JhZnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFpcmNyYWZ0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxzQ0FBMkM7QUFJM0M7SUFFRTtJQUFnQixDQUFDO0lBRWhCLHVDQUFhLEdBQWIsVUFBYyxFQUFZLEVBQUUsTUFBYztRQUNyQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUYscUNBQVcsR0FBWCxVQUFZLEVBQVksRUFBRSxNQUFjO1FBQ25DLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRUYsb0NBQVUsR0FBVixVQUFXLEVBQVk7UUFDbEIsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBQyxFQUFFLENBQUMsR0FBRSxFQUFFLENBQUE7SUFDakMsQ0FBQztJQUVGLHFDQUFXLEdBQVgsVUFBWSxFQUFZO1FBQ2hCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxlQUFlLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUMvQixJQUFJLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLEdBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM3RixJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ25ELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBQyxFQUFFLEdBQUMsRUFBRSxHQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0EsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNqQixDQUFDO0lBQ1QsQ0FBQztJQUVELDBDQUFnQixHQUFoQixVQUFpQixTQUFtQjtRQUM1QixFQUFFLENBQUMsQ0FBQyxTQUFTLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztZQUN0QixJQUFJLE1BQU0sR0FBRyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsRSxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ25ELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBQyxFQUFFLEdBQUMsRUFBRSxHQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0EsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNqQixDQUFDO0lBQ1QsQ0FBQztJQUVGLGlDQUFPLEdBQVAsVUFBUSxFQUFZO1FBQ2QsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQztJQUMzQyxDQUFDO0lBdkNVLGVBQWU7UUFEM0IsaUJBQVUsRUFBRTs7T0FDQSxlQUFlLENBeUMzQjtJQUFELHNCQUFDO0NBQUEsQUF6Q0QsSUF5Q0M7QUF6Q1ksMENBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBaXJjcmFmdCB9IGZyb20gXCIuL2FpcmNyYWZ0XCI7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBaXJjcmFmdFNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgIGdldEVuZ2luZUxlZnQoYWM6IEFpcmNyYWZ0LCBlbmdpbmU6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKGFjLmVuZ2luZUhyc0F0TWFpbnRbZW5naW5lLTFdIC0gdGhpcy5nZXRUdGlzKGFjKSk7XG4gICAgfVxuXG4gICBnZXRQcm9wTGVmdChhYzogQWlyY3JhZnQsIGVuZ2luZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoYWMucHJvcEhyc0F0TWFpbnRbZW5naW5lLTFdIC0gdGhpcy5nZXRUdGlzKGFjKSk7XG4gICAgfVxuXG4gICBnZXRIcnNMZWZ0KGFjOiBBaXJjcmFmdCk6IG51bWJlciB7XG4gICAgICAgIGxldCBocnMgPSBhYy5ocnNBdE1haW50IC0gdGhpcy5nZXRUdGlzKGFjKTtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoaHJzKjEwKS8gMTBcbiAgICB9XG5cbiAgIGdldERheXNMZWZ0KGFjOiBBaXJjcmFmdCk6IG51bWJlciB7XG4gICAgICAgICAgIGlmIChhYy5hbm51YWxEYXRlVHVwbGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgIGxldCBleERhdGUgPSBuZXcgRGF0ZShhYy5hbm51YWxEYXRlVHVwbGVbMF0sIGFjLmFubnVhbERhdGVUdXBsZVsxXS0xLCBhYy5hbm51YWxEYXRlVHVwbGVbMl0pO1xuICAgICAgICAgICAgICAgICAgIGxldCB0aW1lID0gZXhEYXRlLnZhbHVlT2YoKSAtIERhdGUubm93KCkudmFsdWVPZigpO1xuICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRpbWUgLyAoMjQqNjAqNjAqMTAwMCkpO1xuICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICB9XG4gICB9XG5cbiAgIGdldE1haW50RGF5c0xlZnQoZGF0ZVR1cGxlOiBudW1iZXJbXSk6IG51bWJlciB7XG4gICAgICAgICAgIGlmIChkYXRlVHVwbGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgIGxldCBleERhdGUgPSBuZXcgRGF0ZShkYXRlVHVwbGVbMF0sIGRhdGVUdXBsZVsxXS0xLCBkYXRlVHVwbGVbMl0pO1xuICAgICAgICAgICAgICAgICAgIGxldCB0aW1lID0gZXhEYXRlLnZhbHVlT2YoKSAtIERhdGUubm93KCkudmFsdWVPZigpO1xuICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRpbWUgLyAoMjQqNjAqNjAqMTAwMCkpO1xuICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICB9XG4gICB9XG5cbiAgZ2V0VHRpcyhhYzogQWlyY3JhZnQpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gYWMuY2xvY2tUaW1lICsgYWMuY2xvY2tPZmZzZXQ7XG4gIH1cblxufVxuIl19